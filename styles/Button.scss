@import './mixins/mixins.scss';
@import './themes/vars.scss';

@mixin size-mixin($size) {
  @include m($size + "-size") {
    $height: map-get($map: $button-height, $key: $size);
    $font-size: map-get($map: $button-font-size, $key: $size);
    font-size: $font-size;
    height: $height;
    padding: map-get($map: $button-padding, $key: $size);
    white-space: nowrap;
    @include m(round) {
      padding: map-get($map: $round-button-padding, $key: $size);
      border-radius: $height / 2;
    }
    @include e(content) {
      display: inline-block;
      line-height: $height;
    }
    @include e(icon) {
      display: inline-block;
      position: relative;
      $icon-size: map-get($map: $button-icon-size, $key: $size);
      line-height: $height;
      height: $height;
      width: $icon-size;
      max-width: $icon-size;
      vertical-align: bottom;
      .n-icon {
        font-size: $icon-size;
        vertical-align: text-bottom;
      }
      .n-spin {
        height: $icon-size;
        width: $icon-size;
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        display: block;
      }
      @include m(slot) {
        width: $icon-size;
        font-size: $icon-size;
        display: inline-flex;
        align-items: center;
        vertical-align: bottom;
        .n-icon-slot {
          display: block;
          line-height: $icon-size;
          height: $icon-size;
          width: $icon-size;
          font-size: $icon-size;
        }
      }
    }
  }
}

@mixin type-mixin ($type) {
  @include m($type + "-type") {
    border-radius: $button-border-radius;
    color: map-get($map: $button-color, $key: $type);
    background-color: map-get($map: $button-background-color, $key: $type);
    box-shadow: map-get($map: $button-box-shadow, $key: $type);
    @include not-m(disabled) {
      @include m(enter-pressed) {
        background-color: map-get($map: $button-background-color, $key: $type + '-active');
      } 
      @include m(rippling) {
        &::after {
          animation-name: #{$theme}-#{$type}-button-ripple--spread, #{$theme}-#{$type}-button-ripple--opacity;
          animation-duration: .6s;
          animation-timing-function: cubic-bezier(0, .4, .5, .9), cubic-bezier(.5, .2, .8, .5);
        }
      }
      &:not(:active):focus {
        @include not-m(enter-pressed) {
          background-color: map-get($map: $button-background-color, $key: $type + '-hover');
        } 
      }
      @include not-m(enter-pressed) {
        &:hover {
          background-color: map-get($map: $button-background-color, $key: $type + '-hover');
        }
      }
      &:active {
        background-color: map-get($map: $button-background-color, $key: $type + '-active');
      }
    }
    @content;
  }
}

@mixin ripple-mixin($type) {
  @keyframes #{$theme}-#{$type}-button-ripple--spread {
    from {
      box-shadow: map-get($map: $button-box-shadow, $key: $type + '-focus-ripple-start');
    }
    to {
      box-shadow: map-get($map: $button-box-shadow, $key: $type + '-focus-ripple-end');
    }
  }
  @keyframes #{$theme}-#{$type}-button-ripple--opacity {
    from {
      opacity: .4;
    }
    to {
      opacity: 0;
    }
  }
}

@include themes-mixin() {
  @include ripple-mixin('default');
  @include ripple-mixin('primary');
  @include b(button) {
    @include once {
      outline: none;
      position: relative;
      border: none;
      font-family: $button-font-family;
      display: inline-block;
      align-items: center;
      justify-content: center;
      user-select: none;
      font-weight: 700;
      text-align: center;
      transition: background-color .15s $default-cubic-bezier, opacity .15s $default-cubic-bezier, box-shadow .3s $default-cubic-bezier;
      cursor: pointer;
      &::after {
        content: "";
        border-radius: inherit;
        position: absolute;
        left: 0;
        top: 0;
        right: 0;
        bottom: 0;
      }
      @include e(icon) {
        @include fade-in-width-expand-transition();
        margin-right: 6px;
        @include m(right) {
          margin-right: 0px;
          margin-left: 4px;
        }
      }
      @include e(content) {
        white-space: nowrap;
        vertical-align: baseline;
      }
      @include m(block) {
        display: block;
      }
      @include m(disabled) {
        cursor: not-allowed;
        opacity: .4;
      }
      @include m(loading) {
        cursor: default;
        opacity: .6;
      }
      &::-moz-focus-inner {
        border: 0;
      }
      @include size-mixin('tiny');
      @include size-mixin('small');
      @include size-mixin('medium');
      @include size-mixin('large');
    }
    @include type-mixin('default');
    @include type-mixin('primary');
  }
}