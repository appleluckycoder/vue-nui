// @import "./config.scss";

$namespace: 'n';
$element-separator: '__';
$modifier-separator: '--';
$state-prefix: 'is-';
$main-color: null;

$B: null;
$BE: null;

$theme: null;
$first-theme-iteration-done: false;

@function dark-theme() {
  $main-color: black !global;
  @return null;
}

@function light-theme() {
  $main-color: white !global;
  @return null;
}

@mixin b($block) {
  $temp-block: $B;
  $temp-block-element: $BE;
  $B: $namespace + "-" + $block !global;
  $BE: $B!global;
  .#{$B} {
    @content;
  }
  $B: $temp-block !global;
  $BE: $temp-block-element !global;
}

@mixin e($elements...) {
  $temp-block-element: $BE;
  $BEs: '';
  @each $element in $elements {
    $BE: $B + $element-separator + $element !global;
    .#{$BE} {
      @content
    }
  }
  $BE: $temp-block-element !global;
}

@mixin m($modifiers...) {
  $BEMs: '';
  @for $i from 0 to length($modifiers) {
    $modifier: nth($modifiers, $i + 1);
    @if $i == 0 {
      $BEMs: '&.' + $BE + $modifier-separator + $modifier;
    } @else {
      $BEMs: $BEMs + ', &.' + $BE + $modifier-separator + $modifier;
    }
  }
  #{$BEMs} {
    @content
  }
}

@mixin not-m($modifier) {
  $BEM: '';
  $BEM: '.' + $BE + '--' + $modifier;
  &:not(#{$BEM}) {
    @content
  }
}

@mixin themes-mixin($theme-names...) {
  $temp-theme: $theme;
  $theme-list: [];
  $first-theme-iteration-done: false !global;
  @each $theme-name in $theme-names {
    $theme: $theme-name !global;
    @if call($theme + "-theme") {};
    @content;
    $first-theme-iteration-done: true !global;
  }
  $first-theme-iteration-done: false !global;
  $theme: $temp-theme !global;
}

@mixin once() {
  @if not $first-theme-iteration-done {
    @content
  }
}

@mixin detachedContentWrapper {
  position: fixed;
  left: 0;
  top: 0;
  width: 0;
  height: 0;
  overflow: visible;
}

@mixin detachedContent {
  position: fixed;
}